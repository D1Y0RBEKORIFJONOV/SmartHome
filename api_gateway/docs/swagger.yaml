basePath: /
definitions:
  entity.AddChannelReq:
    properties:
      channel_name:
        type: string
    type: object
  entity.AddChannelReqChannel:
    properties:
      channel_name:
        type: string
    type: object
  entity.AddSmartAlarmReq:
    properties:
      device_name:
        type: string
      model_name:
        type: string
    type: object
  entity.AddSpeakerReq:
    properties:
      model_name:
        type: string
    type: object
  entity.AddTVReq:
    properties:
      model_name:
        type: string
    type: object
  entity.Alarm:
    properties:
      alarm_time:
        type: string
      remaining_time:
        type: string
    type: object
  entity.Channel:
    properties:
      channel_name:
        type: string
      channel_number:
        type: string
    type: object
  entity.CreateAlarmClockReq:
    properties:
      clock_time:
        type: string
      device_name:
        type: string
    type: object
  entity.CreateUserReq:
    properties:
      address:
        type: string
      confirm_password:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  entity.DeleteChannelReq:
    properties:
      channel_name:
        type: string
    type: object
  entity.DeleteUserReq:
    properties:
      is_hard_deleted:
        type: boolean
    type: object
  entity.DownOrUpVoiceTvRes:
    properties:
      sound:
        type: integer
    type: object
  entity.GetAllUserRes:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/entity.User'
        type: array
    type: object
  entity.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entity.LoginRes:
    properties:
      token:
        $ref: '#/definitions/entity.Token'
    type: object
  entity.PreviousAndNextRes:
    properties:
      channel:
        $ref: '#/definitions/entity.Channel'
    type: object
  entity.Profile:
    properties:
      address:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      first_name:
        type: string
      updated_at:
        type: string
    type: object
  entity.RemainingTimRes:
    properties:
      alarms:
        items:
          $ref: '#/definitions/entity.Alarm'
        type: array
      count:
        type: integer
    type: object
  entity.StatusMessage:
    properties:
      message:
        type: string
    type: object
  entity.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  entity.UpdateEmailReq:
    properties:
      new_email:
        type: string
    type: object
  entity.UpdatePasswordReq:
    properties:
      new_password:
        type: string
      password:
        type: string
    type: object
  entity.UpdateUserReq:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  entity.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      profile:
        $ref: '#/definitions/entity.Profile'
    type: object
  entity.VerifyUserReq:
    properties:
      email:
        type: string
      secret_code:
        type: string
    type: object
host: localhost:9002
info:
  contact: {}
  description: This is a sample server for a restaurant reservation system.
  title: Artisan Connect
  version: "1.0"
paths:
  /alarm/clock:
    get:
      consumes:
      - application/json
      description: Get the remaining time for the alarm
      parameters:
      - description: Name of the device
        in: query
        name: device_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.RemainingTimRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Remaining Time
      tags:
      - alarm
    post:
      consumes:
      - application/json
      description: Create a new alarm clock
      parameters:
      - description: Create Alarm Clock Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.CreateAlarmClockReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Alarm Clock
      tags:
      - alarm
  /alarm/open/curtain:
    put:
      consumes:
      - application/json
      description: Open the curtain
      parameters:
      - description: Name of the device
        in: query
        name: device_name
        required: true
        type: string
      - description: Open command
        in: query
        name: open
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Open Curtain
      tags:
      - alarm
  /alarm/open/door:
    put:
      consumes:
      - application/json
      description: Open the alarm
      parameters:
      - description: Name of the device
        in: query
        name: device_name
        required: true
        type: string
      - description: Open command
        in: query
        name: open
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Open OpenDoor
      tags:
      - alarm
  /alarm/register:
    post:
      consumes:
      - application/json
      description: Add a new smart alarm
      parameters:
      - description: Add Smart Alarm Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.AddSmartAlarmReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: AddAlarm
      tags:
      - alarm
  /speaker/channel:
    delete:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: channel create information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.DeleteChannelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: DeleteChannel
      tags:
      - speaker
    post:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: channel create information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.AddChannelReqChannel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: AddChannel
      tags:
      - speaker
  /speaker/channel/cursor:
    post:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: true or false
        in: query
        name: next
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PreviousAndNextRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: PreviousAndNext
      tags:
      - speaker
  /speaker/open:
    put:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: true or false
        in: query
        name: open
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: OpenSpeaker
      tags:
      - speaker
  /speaker/register:
    post:
      consumes:
      - application/json
      description: AddSpeaker add speaker
      parameters:
      - description: tv create information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.AddSpeakerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: AddSpeaker
      tags:
      - speaker
  /speaker/user/channels:
    get:
      consumes:
      - application/json
      description: Add tv to home
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.GetAllUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: GetChannels
      tags:
      - speaker
  /speaker/voice:
    post:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: true or false
        in: query
        name: up
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.DownOrUpVoiceTvRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: ControlVoice
      tags:
      - speaker
  /tv/channel:
    delete:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: channel create information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.DeleteChannelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: DeleteChannel
      tags:
      - television
    post:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: channel create information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.AddChannelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: AddChannel
      tags:
      - television
  /tv/channel/cursor:
    post:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: true or false
        in: query
        name: next
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PreviousAndNextRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: PreviousAndNext
      tags:
      - television
  /tv/open:
    put:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: true or false
        in: query
        name: open
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: OpenTv
      tags:
      - television
  /tv/register:
    post:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: tv create information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.AddTVReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: AddTvHome
      tags:
      - television
  /tv/user/channels:
    get:
      consumes:
      - application/json
      description: Add tv to home
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.GetAllUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: GetChannels
      tags:
      - television
  /tv/voice:
    post:
      consumes:
      - application/json
      description: Add tv to home
      parameters:
      - description: true or false
        in: query
        name: up
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.DownOrUpVoiceTvRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: ControlVoice
      tags:
      - television
  /user:
    get:
      consumes:
      - application/json
      description: Retrieve user information by field and value
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: GetUser
      tags:
      - user
  /user/all:
    get:
      consumes:
      - application/json
      description: Retrieve user information by field and value with pagination
      parameters:
      - description: Field to filter by
        in: query
        name: field
        type: string
      - description: Value to filter by
        in: query
        name: value
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of users" // Adjust this to match your user object structure
          schema:
            $ref: '#/definitions/entity.GetAllUserRes'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get all users
      tags:
      - user
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User login information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.DeleteUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: DeleteUser
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User login information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.LoginRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Login
      tags:
      - auth
  /user/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User registration information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.CreateUserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Register
      tags:
      - auth
  /user/update:
    put:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User login information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: UpdateUser
      tags:
      - user
  /user/update/email:
    put:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User login information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateEmailReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: UpdateEmail
      tags:
      - user
  /user/update/password:
    put:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User login information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.UpdatePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: UpdatePassword
      tags:
      - user
  /user/verify:
    post:
      consumes:
      - application/json
      description: Confirm the code sent to the email
      parameters:
      - description: User verification information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.VerifyUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatusMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: VerifyUser
      tags:
      - auth
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
